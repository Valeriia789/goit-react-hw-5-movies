{"version":3,"file":"static/js/297.9eb4aec2.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","pages/commonStyles.jsx","services.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 4px;\r\n  margin: 40px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  margin: 0;\r\n  background-color: ${props => props.theme.colors.blue};\r\n  color: ${props => props.theme.colors.text};\r\n  font-size: 1rem;\r\n\r\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.primary};\r\n    box-shadow: ${props => props.theme.shadows.pink};\r\n    cursor: pointer;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  &[disabled] {\r\n    background-color: ${props => props.theme.colors.blueOpacity};\r\n    box-shadow: none;\r\n    cursor: revert;\r\n    transform: revert;\r\n  }\r\n\r\n  &[aria-current] {\r\n    background-color: ${props => props.theme.colors.primary};\r\n    font-weight: bold;\r\n    cursor: revert;\r\n    transform: revert;\r\n  }\r\n`;\r\n\r\nexport { Nav, Button };\r\n","import PropTypes from 'prop-types';\r\nimport { Nav, Button } from './Pagination.styled';\r\n\r\nfunction Pagination({ total, limit, page, setPage }) {\r\n  const numPages = Math.ceil(total / limit);\r\n\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <Button onClick={() => setPage(page - 1)} disabled={page === 1}>\r\n          &lt;\r\n        </Button>\r\n        {Array(numPages)\r\n          .fill()\r\n          .map((_, i) => (\r\n            <Button\r\n              key={i + 1}\r\n              onClick={() => setPage(i + 1)}\r\n              aria-current={page === i + 1 ? 'page' : null}\r\n            >\r\n              {i + 1}\r\n            </Button>\r\n          ))}\r\n        <Button onClick={() => setPage(page + 1)} disabled={page === numPages}>\r\n          &gt;\r\n        </Button>\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n\r\nPagination.propTypes = {\r\n  total: PropTypes.number,\r\n  limit: PropTypes.number,\r\n  page: PropTypes.number,\r\n  setPage: PropTypes.func,\r\n};\r\n\r\n// https://codesandbox.io/s/react-pagination-qqrdf?from-embed=&file=/src/Posts.jsx\r\n","import styled from '@emotion/styled';\r\n\r\nconst SearchContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  justify-content: center;\r\n  max-width: 340px;\r\n  padding: 10px;\r\n  border-radius: 20px;\r\n  background-color: ${props => props.theme.colors.primary};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  margin-left: 10px;\r\n  border: none;\r\n  border-bottom: 1px solid;\r\n  outline: none;\r\n\r\n  font-size: ${props => props.theme.fontSizes[3]}px;\r\n\r\n  background-color: ${props => props.theme.colors.primary};\r\n  border-color: ${props => props.theme.colors.blue};\r\n`;\r\n\r\nexport { Input, SearchContainer, Label };\r\n","import PropTypes from 'prop-types'\r\nimport { Input, SearchContainer, Label } from './Searchbar.styled';\r\n\r\nconst Searchbar = ({ value, onChange }) => {\r\n  return (\r\n    <SearchContainer>\r\n      <Label>\r\n        <img src=\"https://img.icons8.com/nolan/32/search-more.png\" alt=\"\" />\r\n        <Input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => onChange(e.target.value)}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movies...\"\r\n        />\r\n      </Label>\r\n    </SearchContainer>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n}","import { useMemo } from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSearchParams, useLocation } from 'react-router-dom';\r\n\r\nimport { fetchSearchMovies } from '../../services';\r\nimport Searchbar from '../../components/Searchbar/Searchbar';\r\nimport Pagination from 'components/Pagination/Pagination';\r\n\r\nimport {\r\n  ListContainer,\r\n  MoviesList,\r\n  ListItem,\r\n  MovieLink,\r\n  NoImageAvlb,\r\n  MovTitle,\r\n} from '../commonStyles';\r\n\r\nconst Movies = () => {\r\n  const location = useLocation();\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [page, setPage] = useState(1);\r\n\r\n  const imageURL = 'https://image.tmdb.org/t/p/w185';\r\n\r\n  const changeFilter = value => {\r\n    setSearchParams(value !== '' ? { filter: value } : {});\r\n  };\r\n\r\n  const filterParam = searchParams.get('filter') ?? '';\r\n\r\n  useEffect(() => {\r\n    if (filterParam === '') {\r\n      setMovies([]);\r\n      return;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      fetchSearchMovies({ query: filterParam, page }).then(setMovies);\r\n    }, 200);\r\n  }, [filterParam, page]);\r\n\r\n  const visibleMovies = useMemo(() => {\r\n    return movies.filter(\r\n      movie =>\r\n        movie.hasOwnProperty('title') &&\r\n        movie.title.toLowerCase().includes(filterParam.toLowerCase())\r\n    );\r\n  }, [filterParam, movies]);\r\n\r\n  return (\r\n    <ListContainer>\r\n      <Searchbar value={filterParam} onChange={changeFilter} />\r\n      {visibleMovies.length > 0 && (\r\n        <MoviesList>\r\n          {visibleMovies.map(movie => (\r\n            <ListItem key={movie.id}>\r\n              <MovieLink to={`${movie.id}`} state={{ from: location }}>\r\n                {movie.poster_path ? (\r\n                  <img src={imageURL + movie.poster_path} alt=\"Poster\" />\r\n                ) : (\r\n                  <NoImageAvlb\r\n                    src=\"https://bpgroup.lv/i/product_images/images/Z2000128443.jpg\"\r\n                    alt=\"No Poster Available\"\r\n                  />\r\n                )}\r\n\r\n                <MovTitle>{movie.title}</MovTitle>\r\n              </MovieLink>\r\n            </ListItem>\r\n          ))}\r\n        </MoviesList>\r\n      )}\r\n\r\n      {visibleMovies.length > 0 && (\r\n        <Pagination\r\n          total={Number(100)}\r\n          limit={Number(20)}\r\n          page={page}\r\n          setPage={setPage}\r\n        />\r\n      )}\r\n    </ListContainer>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ListContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst MoviesList = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: -10px;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  margin: 10px;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  box-shadow: ${props => props.theme.shadows.blue};\r\n\r\n  transition: all 400ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.blueOpacity};\r\n    box-shadow: ${props => props.theme.shadows.pink};\r\n  }\r\n`;\r\n\r\nconst MovieLink = styled(NavLink)`\r\n  display: block;\r\n  max-width: 190px;\r\n\r\n  text-align: center;\r\n  overflow: hidden;\r\n  color: ${props => props.theme.colors.blue};\r\n\r\n  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.colors.text};\r\n  }\r\n`;\r\n\r\nconst NoImageAvlb = styled.img`\r\n  width: 185px;\r\n`;\r\n\r\nconst MovTitle = styled.h2`\r\n  text-transform: uppercase;\r\n  font-size: ${props => props.theme.fontSizes[3]}px;\r\n  font-weight: ${props => props.theme.fontWeights.heading};\r\n`;\r\n\r\nexport {\r\n  ListContainer,\r\n  MoviesList,\r\n  ListItem,\r\n  MovieLink,\r\n  NoImageAvlb,\r\n  MovTitle,\r\n};\r\n\r\n// \"images\": {\r\n//   \"base_url\": \"http://image.tmdb.org/t/p/\",\r\n//   \"secure_base_url\": \"https://image.tmdb.org/t/p/\",\r\n//   \"backdrop_sizes\": [\r\n//     \"w300\",\r\n//     \"w780\",\r\n//     \"w1280\",\r\n//     \"original\"\r\n//   ],\r\n//   \"logo_sizes\": [\r\n//     \"w45\",\r\n//     \"w92\",\r\n//     \"w154\",\r\n//     \"w185\",\r\n//     \"w300\",\r\n//     \"w500\",\r\n//     \"original\"\r\n//   ],\r\n//   \"poster_sizes\": [\r\n//     \"w92\",\r\n//     \"w154\",\r\n//     \"w185\",\r\n//     \"w342\",\r\n//     \"w500\",\r\n//     \"w780\",\r\n//     \"original\"\r\n//   ],\r\n//   \"profile_sizes\": [\r\n//     \"w45\",\r\n//     \"w185\",\r\n//     \"h632\",\r\n//     \"original\"\r\n//   ],\r\n//   \"still_sizes\": [\r\n//     \"w92\",\r\n//     \"w185\",\r\n//     \"w300\",\r\n//     \"original\"\r\n//   ]\r\n// },","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = 'bc2fa6fd786f6a0d750b3d3cba486c9b';\r\n\r\nconst fetchTrending = async (page) => {\r\n  const trendingRes = await axios\r\n    .get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`)\r\n    .then(response => response.data);\r\n\r\n  return trendingRes.results;\r\n};\r\n\r\nconst fetchSearchMovies = async ({ query, page }) => {\r\n  const searchRes = await axios\r\n    .get(\r\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\r\n    )\r\n    .then(response => response.data);\r\n\r\n  return searchRes.results;\r\n};\r\n\r\nconst fetchMovieDetails = async movieId => {\r\n  const detailsRes = await axios.get(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  return detailsRes.data;\r\n};\r\n\r\nconst fetchCast = async movieId => {\r\n  const castRes = await axios.get(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  return castRes.data.cast;\r\n};\r\n\r\nconst fetchReviews = async movieId => {\r\n  const reviewsRes = await axios\r\n    .get(\r\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\r\n    )\r\n    .then(response => response.data);\r\n\r\n  return reviewsRes.results;\r\n};\r\n\r\nexport {\r\n  fetchTrending,\r\n  fetchSearchMovies,\r\n  fetchMovieDetails,\r\n  fetchCast,\r\n  fetchReviews,\r\n};\r\n"],"names":["Nav","styled","Button","props","theme","colors","blue","text","primary","shadows","pink","blueOpacity","total","limit","page","setPage","numPages","Math","ceil","onClick","disabled","Array","fill","map","_","i","SearchContainer","Label","Input","fontSizes","value","onChange","src","alt","type","e","target","autoComplete","autoFocus","placeholder","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","filterParam","get","useEffect","setTimeout","fetchSearchMovies","query","then","visibleMovies","useMemo","filter","movie","hasOwnProperty","title","toLowerCase","includes","length","to","id","state","from","poster_path","Pagination","Number","ListContainer","MoviesList","ListItem","MovieLink","NavLink","NoImageAvlb","MovTitle","fontWeights","heading","BASE_URL","API_KEY","fetchTrending","axios","response","data","trendingRes","results","searchRes","fetchMovieDetails","movieId","detailsRes","fetchCast","castRes","cast","fetchReviews","reviewsRes"],"sourceRoot":""}